.TH TIPSY 5NEMO "5 February 2022"

.SH "NAME"
tipsy \- formats used in TIPSY package

.SH "DESCRIPTION"
The \fBTIPSY ARRAY\fP format was originally an ascii format where the first
line contains the number of elements of a 1 dimensional array,
followed by all elements.
.PP
The \fBTIPSY VECTOR\fP format is an ascii format where the first
line contains the number of elements of the 3 dimensional vector,
followed by all elements, one vector at a time (but split of 3 lines).
.PP
The \fBTIPSY binary\fP format is the more common format. Its binary header (28 or 32 bytes,
perhaps padded to 32) contains the time and number of bodies (see below).

.SH "EXAMPLE"
Here is a TIPSY VECTOR format of the origin, unit X, Y and Z vectors
on a 3-dimensional cube.
.PP
.nf
4
1.0
0.0
0.0
0.0
1.0
0.0
0.0
0.0
1.0
.fi

.SH "BINARY"

The header is 28 bytes in Tipsy's original \fBcode/defs.h\fP, however, many authors are padding this
with a integer version, making it 32 bytes. This also limits the number of particles, see CAVEAT below.

.nf

struct header {
    double time ;
    int nbodies ;     // total number of bodies
    int ndim ;        // always 3
    int nsph ;        // number of gas particles
    int ndark ;       // number of dark/halo particles
    int nstar ;       // number of star particles
    int version ;     // a new 32-byte padding field not used by all tipsy I/O projects
} ;

.fi

.SH "CAVEATS"
Only works in 3-dimensional space, and only 3 flavors of particles (gas, dark, star) are supported. For comparison,
the \fIgadget(5NEMO)\fP format (version 1/2/3) supports 6 flavors of particles, though the last one is never
used (but never say never).
.PP
Since the 32 byte header contains a few 4-byte integers, this limits the total number of
particles to ~2 billion, unless the parser is recoded to use \fBunsigned int\fP, in which
case ~4 billion can be used.

.SH "SEE ALSO"
tipsy(1), snapshot(5NEMO)

.SH "AUTHOR"
Peter Teuben 

.SH "FILES"
.nf
.ta +4.5i
nemo/src/nbody/io/tipsydefs.h  	definition of the TIPSY binary format 
bonsai/runtime/include/tipsydefs.h	Bonsai's view (with some fields changed type) [no version]
tipsy/code/defs.h	Original definition [no version]
uns_projects/lib/utils/tipsydefs.std.h	[no version]

.fi
Note that Bonsai has hyjacked the Phi field for dark and stars for an integer ID.  With the -DWITH_BOOM
you can currently carry a new acc/epot in version 6 of the tipsy files
.SH "UPDATE HISTORY"
.nf
.ta +1.5i +4.5i
23-dec-1994	man written	PJT
5-feb-2022	document some historic confusion	PJT
.fi
