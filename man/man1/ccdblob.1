.TH CCDBLOB 1NEMO "8 June 2025"

.SH "NAME"
ccdblob \- properties of a blob in an image

.SH "SYNOPSIS"
\fBccdblob\fP [parameter=value]

.SH "DESCRIPTION"
\fBccdblob\fP is a poor man's source extractor and 
computes some properties of a blob ("star") in an image. With given rough pixel coordinates
and a box size, it will determine the peak, shape and flux of the blob, assuming the background signal (box
needs to be big enough for this) is well characterised by the median value. This current algorithm thus does not
work in crowded fields.
.PP
Selection of the pixels involved in the \fIfitting\fP is via two keywords:  \fBbox=\fP and \fBclip=\fP. Apart
from visual inspection, a good strategy could be to clip at a fraction of (datamax-datamin)
.PP
See also \fIccdshape(1NEMO)\fP from which this program was derived.
.PP
Pixel coordinates are 0-based.
.PP

.SH "PARAMETERS"
The following parameters are recognized in any order if the keyword
is also given:
.TP 20
\fBin=\fP
Input \fIimage(5NEMO)\fP file.
.br
No default.
.TP
\fBpos=\fP\fIx,y\fP
(x,y) center of the \fBbox\fP. Positions are 0-based integers
With the special value \fBpos=max\fP the location of the maximum in the image is used.
.br
Default is center of image. 
.TP
\fBbox=\fP\fIsize\fP
Box size (in pixels) to use around \fBpos\fP. It is best to choose something odd,
for an even box size, the center pixel will be in the upper-right quadrant.
gi
.br
Default: 7.
.TP
\fBclip=\fP
Use only values above \fBclip\fP from the selected area.
.br
Default will use all values within the box.
.TP
\fBwcs=t|f\fP
Use WCS of the cube (otherwise use pixel coordinates 1..N).
.TP
\fBradecvel=t|f\fP
Split the RA/DEC from VEL
.br
[f]  
.TP
\fBweight=t|f\fP
Weigh moments of inertia by intensity?
.br
[t]    
.TP
\fBcross=\fP
Use cross correlations between X and Y to...
.TP
\fBscale=\fP
Scale factor to be applied to output radii. A common value is 3600 if the input
units are degrees.
.br
Default: 1
.br
.TP
\fBout=\fP
Optional output file. If given, the pixel coordinates and intensities are written out,
for programs such as \fItabnlllsqfit(1NEMO)\fP to fit models.


.SH "EXAMPLES"
An example of creating a gaussian blob with a given Signal/Noise (sn=) and running it
through ccdblob:
.EX

sn=100
ccdgen - gauss 1,3 127,127  |\\
  ccdgen - noise 0,1/$sn in=- seed=123 |\\
  ccdblob -

Npoints:    49
Box:        7
DataMinMax: 0.345445 1.00188
Min at:     60 66 (0 based)
Max at:     63 63
Mean:       0.6649
Median:     1.00188
DataSum:    32.5801
Flux:       -16.5122
ImSize:     127 127 1
Center:     0.000935206 -0.00434081 0 [wcs]
BLOB:  63 63  0.000935206 -0.00434081 7   1.00188 1.00188 -16.5122
        e_x:     1.00000     0.70711     0.70711     0.00000    90.0   45.0
        e_y:     1.00000    -0.70711     0.70711     0.00000    90.0  135.0
        e_z:     1.00000     0.00000     0.00000     1.00000     0.0    0.0
      qpole:  7941.36475     0.70711     0.70711     0.00000
           :     3.35181     0.70711    -0.70711     0.00000
           :     0.00000     0.00000     0.00000     1.00000
a,b:  89.1143 1.83079
inc:  88.8228 (meaningless without radecvel)
pa:   135 (meaningless without radecvel)

.EE
.PP
The same example as before, but now feeding a table with 37 points to a 2d gaussfit. These fits
are often very dependant on the initial guess, but it does a pretty good job here:
.EX

ns=100
ccdgen - gauss 1,3 127,127  |\\
  ccdgen - noise 0,1/$sn in=- seed=123 |\\
  ccdblob - clip=0.5 out=gauss.tab
tabnllsqfit gauss.tab 1,2 3 fit=gauss2d par=1,2,64,64,2

nrt=16
Fitting a+b*exp(-[(x-c)^2+(y-d)^2]/(2*e^2)):  
a= -0.076949 0.126768 
b= 1.07709 0.123398 
c= 63.0009 0.0110594
d= 62.9887 0.011061
e= 3.15046 0.244319
npt= 37
rms= 0.00801193
rms2/chi2= 0.00237507
rms/chi = 1

tabnllsqfit gauss.tab 1,2 3 fit=peak2d par=1,-1,-1,63,63
Fitting : y = a+b*(x-d)**2+*c*(y-e)**2:  
a= 0.977191 0.00428134 
b= -0.0414872 0.000758877 
c= -0.0408268 0.000758877
d= 63.0008 0.0148635
e= 62.9876 0.0151057
FWZP= 0.206048 0.204401
npt= 37
rms= 0.0119193
rms2/chi2= 0.00525659
rms/chi = 1

.EE


.SH "SEE ALSO"
ccdshape(1NEMO), ccdstat(1NEMO), ccdcross(1NEMO), image(5NEMO)
.nf
https://github.com/perwin/imfit
.fi
.SH "FILES"
src/image/misc/ccdblob.c

.SH "AUTHOR"
Peter Teuben

.SH "HISTORY"
.nf
.ta +1.25i +4.5i
15-feb-2020	V0.1 Created	PJT
14-feb-2025	V0.3 fix boxsize when no pos given	PJT
30-may-2025	V0.5 allow pos=max	PJT
7-jun-2025	V0.8 WCS fixes,and use 0-based pixels	PJT
.fi
