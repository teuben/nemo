.TH SNAPROTATE 1NEMO "18 January 2022"

.SH "NAME"
snaprotate \- rotate N-body snapshot file about principle axes.

.SH "SYNOPSIS"
\fBsnaprotate in=\fPsnap-file \fBout=\fPsnap-file [parameter=value] .\|.\|.

.SH "DESCRIPTION"
\fIsnaprotate\fP rotates the positions and velocities of an
N-body snapshot file. A maximum of 3 rotations around either the x, y or
z axes can be applied in any order. An Eulerian rotation
is a rotation around the z, y and z axes respectively. Some common examples
for projections of barred and unbarred galaxies are given in the examples
below.
.PP
The rotation is counter clock-wise (i.e., mathematically positive, unless 
\fBinvert=f\fP is used) as seen from the right-handed \fIxyz\fP-axes;
a \fBz\fP rotation will rotate the \fBx\fP axis towards the \fBy\fP axis;
a \fBy\fP rotation will rotate the \fBz\fP axis towards the \fBx\fP axis;
a \fBx\fP rotation will rotate the \fBy\fP axis towards the \fBz\fP axis.
.PP
An alternate way to specify rotations is using the \fBspinvector=\fP keyword,
where all points are rotated around this vector.
.PP
Although by default all vectors are rotated by the same matrix, the
keyword \fBselect=\fP can be used to select any set of Position,
Velocity or Acceleration.

.SH "PARAMETERS"
The following parameters are recognized; they may be given in any order.
.TP 24
\fBin=\fP\fIsnap-file\fP
Input data is read from \fIsnap-file\fP, which must be in snapshot format.
.TP
\fBout=\fP\fIsnap-file\fP
Output data is written to \fIsnap-file\fP.
.TP
\fBtheta=\fP\fIx-angle\fP
Angles (in degrees) to rotate particles about the specified axes in the
\fBorder=\fP keyword. Up to 3 rotations can be applied. 
Default: none.
.TP
\fBorder=\fP\fItrans-order\fP
Order to apply the rotations about the three coordinate axes.
An Eulerian rotation would be \fBorder=zyz\fP. Default is none.
See also the \fBspinvector\fP keyword below for an alternate way
to specify rotations.
.TP
\fBinvert=\fP\fIinvert-flag\fP
If \fBtrue\fP, invert specified transformation.
Useful for rotating something back to original coordinate system.
Default is \fBfalse\fP.
.TP
\fBtscale=\fP\fIt-scale-factor\fP
If used, this is the degrees per time-unit that the \fBtheta\fP angles
are multiplied with in order to calculate the actual rotation angle.
This can give interesting effects if used for simulations.
Default not used.
.TP
\fBspinvector=\fP\fIx,y,z\fP
Use this vector if you know the vector to rotate around instead of a set
of euler angles. Only one angle \fBtheta=\fP is needed. Positive rotation
is a counterclockwise rotation as seen down the spin vector towards the
origin. The vector does not need to be normalized.
**note this option still disables various other options
such as tscale, invert
.TP
\fBselect=\fP\fIvec1,vec2,...\fP
Vector variables in a snapshot that should be rotated. Valid options
are: \fBpos\fP, \fBvel\fP,  and \fBacc\fP. Exact match required for now.
[Default:  \fBpos,vel,acc\fP]

.SH "EXAMPLES"

For 'normal' unbarred spiral galaxies the following example shows how to
project them into their normaly sky view, taking the sense of
rotation into account:
.nf

   set pa=170             # M51, use pa=200 for M33
   set inc=22             # M51, use inc=30 for M33
   set sign=1             # M51, use sign=-1 for M33
   set sinc=`nemoinp "iflt($sign,0,$inc,-$inc)"`
   mkdisk - 1000 sign=$sign |\\
      snaprotate - - theta=$sinc,$pa order=yz |\\
      snapgrid - velfie.ccd mom=-1
   nds9 velfie.ccd        # view the velocity field using 'ds9'.fi

.fi
With sign=1 it will create a counter clockwise rotating disk
and project it using \fB-$inc,$pa\fP, For a clock-wise rotating disk 
\fB$inc,$pa\fP, 
hence the somewhat awkward looking expressing to compute \fBsinc\fP.
.PP
Suppose you have a barred galaxy model, \fIbar.dat\fP, 
with the galactic plane at z=0
and the bar along the y axis (\fI"position angle=0"\fP), 
and want to project this (such that z=0 will be the sky plane,
and the positive z-axis pointed towards the observer) with given final 
position angle ($pa), inclination ($inc) and angle from line of nodes
to bar ($phi) the following rotations will do the job:
.nf

    set pa=39
    set inc=-45
    set phi=-34
    snaprotate bar.dat n7476.dat "atand(tand($phi)/cosd($inc)),$inc,$pa" zyz
    snapplot n7476 psize="z>0?0.03:0.0"
    
.fi
where \fBpsize\fP was choosen such that ``near'' (z>0) 
particles were plotted a bit bigger to accentuate
the near side of the model. Flipping the sign if $inc will flip the near
and far side.

.SH "SEE ALSO"
snapshift(1NEMO), snapscale(1NEMO), snapspin(1NEMO), snapshot(5NEMO)

.SH "AUTHOR"
Joshua E. Barnes, Peter Teuben

.SH "HISTORY"
.nf
.ta +1i +4i
xx-jan-88	V1.0 original                   	JEB
3-oct-88	V2.1 eulerian angles (order=zyz)	PJT
17-feb-89:      V2.1a new get+snap macros redef's	PJT
27-nov-89:	V2.1b cosmetic defv[]             	PJT
15-nov-90	V3.0 theta is now an array keyword	PJT
1-jun-92	documented the rotation manner bit more precise     	PJT
11-jun-92	V4.0 rotation now defined in math sense             	PJT
21-nov-98	V5.0 added tscale= keyword	PJT
18-nov-05	V5.1a added select=, also implemented select=acc	PJT
22-sep-08	V6.0 added spinvector=	PJT
18-jan-22	fix sense of rotation example	PJT
.fi
