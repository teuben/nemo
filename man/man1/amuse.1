.TH AMUSE 1NEMO "25 May 2025"

.SH "DESCRIPTION"
\fBAMUSE\fP is the Astrophysical MUltipurpose Software Environment.
With it, you can simulate many astrophysical systems.
.PP
The user interacts with AMUSE in python, so there is currently no \fBamuse\fP command, though
one could imagine
.EX

       ipython --profile=amuse

.EE
instead you will want to import this module (see example below) in your python code and go from there.
Internally many components in AMUSE are legacy codes (C,C++,Fortran) running at fantastic speeds.
.PP
An example is shown below, and within NEMO there the script \fBamuse_convert.py\fP
can be used to convert between different
snapshot formats, as long as the format is supported by AMUSE. 
See also \fIunsio(3NEMO)\fP for another approach to such snapshot conversion.


.SH "EXAMPLES"

Here is an example snippet of AMUSE python code integrating a Plummer sphere
in \fInbody units\fP
and writing the resulting snapshot as a table:

.EX

 NBODY    = 128
 TIME     = 10
 FILENAME = 'p.txt'

 from amuse.units import nbody_system
 from amuse.ic.plummer import new_plummer_model
 from amuse.community.bhtree import Bhtree
 from amuse.io import write_set_to_file,read_set_from_file

 stars = new_plummer_model(NBODY)
 gravity = Bhtree()

 eps   = 0.05 | nbody_system.length
 tstop = 10   | nbody_system.time

 gravity.parameters.opening_angle   = 0.75
 gravity.parameters.epsilon_squared = eps * eps
 gravity.parameters.dt_dia          = 1.0      | nbody_system.time
 gravity.parameters.timestep        = 0.015625 | nbody_system.time 

 stars_in_gravity = gravity.particles.add_particles(stars)
 gravity.evolve_model(tstop)
 write_set_to_file(stars_in_gravity, FILENAME, format='txt')

.EE

This table has mass, radius, velocity and position, one star per row.
Notice velocity comes before position!
Thus the following NEMO command will convert it to a standard \fIsnapshot(5NEMO)\fP file:

.EX

 nbody=$(tabcols p.txt | wc -l)
 tabcols p.txt | tabtos - p.snap block1=mass,skip,vx,vy,vz,x,y,z nbody=$nbody

.EE

.PP
Here is a more NEMO like example, running from the (shell) commandline. If AMUSE is
properly installed, the first
example creates a Plummer model in memory, the second example creates a text file, of
which the first particle is displayed as the 3rd line in this table:

.EX
 amuse_convert.py
 amuse_convert.py -o plummer.txt
 
 head -3 plummer.txt
#mass radius vx vy vz x y z
#mass length length * time**-1 length * time**-1 length * time**-1 length length length
0.0078125 0.0 -0.256557735045 0.0863119421344 -0.0484937398944 -0.609540735858 -0.854122523728 0.736476012616
 

.EE

.SH "BUGS"

The follow round trip exercise on the \fBtxt\fP format causes an error:
.EX

fmt=txt
amuse_convert.py -o junk1 -O $fmt -n 100
amuse_convert.py -i junk1 -I $fmt -o junk2 -O $fmt
amuse.io.base.IoException: IO exception: Number of values on line
  '0.01 0.0 -0.319149817818 0.911387278048 0.00131274766207 -1.22528821614 -0.310636170602 0.0257190619401' is 8, expected 0

.EE

formats like csv, amuse-txt, tsf, dyn all seem to work.
.SH "INSTALL"

Within NEMO the command
.EX

   mknemo amuse

.EE
will get you started on the install.  Note there is a user release that does not need NEMO, which
can be a set of \fIpip install\fP. A developer release
is recommended with NEMO, the start of which will likely look as follows:
.EX

   cd $NEMO/local/amuse
   pip install -e .
   make bhtree.code
    
.EE
The AMUSE bhtree code should be the same as the original program \fIbhtree(1NEMO)\fP in NEMO, allowing
for a closer comparison.

.SH "SNAPSHOT"
As described in the help (-h) of \fBamuse_convert.py\fP, the following formats are supported by AMUSE:
.nf
.ta +1.5i

amuse		HDF5 file
amuse-txt	text files with AMUSE header format
csv		comma separated files
dyn		Starlab binary structured file
gadget		Gadget binary data file
hdf5		HDF5 file
nemo		NEMO binary structured file
starlab		Starlab binary structured file
tsf		NEMO binary structured file
txt		text file containing a table of values separated by a predefined
vts		text file containing a table of values separated by a predefined character
vtu		text file containing a table of values separated by a predefined character

.fi

.SH "FILES"
.nf
$NEMO/src/scripts/mknemo.d/amuse - example install script (can be run via mknemo)
$NEMO/local/amuse - root of source code after install
$NEMO/src/scripts/python/amuse_convert.py - also copied to $NEMOBIN during install
.fi

.SH "ADS"
.nf
@ads 2013A&A...557A..84P
@ads 2013CoPhC.184..456P
.fi

.SH "SEE ALSO"
nemo(1NEMO), zeno(1NEMO), starlab(1NEMO), bhtree(1NEMO)
.PP
.nf
https://www.amusecode.org/
.fi

.SH "HISTORY"

.nf
.ta +1.25i +4.5i
25-may-2025	man page and amuse_convert.py written (MODEST25-SPZ)	PJT
.fi
