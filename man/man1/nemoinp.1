.TH NEMOINP 1NEMO "11 October 2023"

.SH "NAME"
nemoinp \- parse a user supplied number string

.SH "SYNOPSIS"
.PP
\fBnemoinp [parameter=value] ...

.SH "DESCRIPTION"
\fInemoinp\fP parses an expression supplied by the user, using the
rules as given by \fInemoinp(3NEMO)\fP. The output format can be
defined too, separators, newlines etc. can be choosen at will.
See also the EXAMPLES below.
.PP
It may come in handy to set an array in a shell variable or to
initialize tables, e.g. \fBnemoinp 1:10:2\fP will then
result in \fB1 3 5 7 9\fP.  Although such implied
loops are a common feature of scripting environments, there
are subtle differences:
.nf

.ta +2i +1i
nemoinp		1:10:2
matlab		1:2:10
seq		1 2 10
numpy.arange	1,10,2	last element (10) is never used
IDL		findgen(5)*2+1  -or-  indgen(5)*2+1

.fi

.SH "PARAMETERS"
The following parameters are recognized in any order if the keyword is also
given:
.TP 20
\fBexpression=\fIexpr-string\fP
expression to be parsed [default: empty ].
.TP
\fBsepar=\fIstring\fP
The string which is appended to the format string described in previous
keyword and is used to separate the numbers output. When no string is
supplied, a blank is used.
[default: empty].
.TP
\fBformat=\fIstring\fP
Valid C-format descriptor used in \fIprintf(3)\fP to output
the numbers. When %d is used, integer math is forced.
See also next keyword for output number separator.
[default: \fB%g\fP].
.TP
\fBnewline=t|f\fP
Should a newline be added after each number parsed. This is often
useful in cases \fInemoinp\fP is used to generate the independant
coordinate when tables have to be generated from scratch.
[Default: \fBt\fP].
.TP
\fBnmax=\fIinteger\fP
Size of scratch array to be allocated dynamically for the parsed
number
[default: \fB32768\fP].
.TP
\fBtab=\fItable_file\fP
Optional table output. Default: none
.TP
\fBseed=\fIinitial_seed\fP
Seed for \fIxrandom(3NEMO)\fP. Default: 0
.TP
\fBatof=\fP
Merely provided to test what \fInatof\fP returns. Note that this
function does not perform any error checking and can return the wrong
number. 
.TP
\fBdms=t|f\fP
Force parsing the (optionally comma separated) string(s) as D:M:S.S, converting 
them to fractional degrees. For H:M:S parsing the user is
responsible for the extra factor of 15.
Default: \fBf\fP.

.SH "CAVEATS"
The number of elements in an array is limited, currently hardcoded to 32678 in
\fInemoinp(3NEMO)\fP. If possible, use \fIseq(1)\fP.

.SH "EXAMPLES"
.nf
   nemoinp 4.2+3.1           simple math
   nemoinp 'sqrt(2)'         math functions
   nemoinp pi+3              some support for funny numbers
   nemoinp 2:20:4            from 2 to 20 in steps of 4 (NEMO command)
   seq 2 4 20                from 2 to 20 in steps of 4 (UNIX command)
   set n=20                  a (t)C-shell variable
   n=20			     a bash/zsh variable
   nemoinp 2:${n}:4          as before, now using a shell variable
   nemoinp 2::4              repeat the value 4 times
   nemoinp '10**[0:3:1]'     log spaced values  1 10 100 1000
   nemoinp 'iflt(1,2,3,4)'   print 3, not 4, because 1 is less than 2
   nemoinp 30:30:15 dms=t    convert hexasegimal 30:30:15 into decimal 30.5043
   nemoinp c,G,h,p,m         a few good constants
   nemoinp 'p*pi/(3600*180)' 1 AU in m
.fi
things that it cannot do are sometimes captured with little known unix commands. Here
are some examples:
.nf
   echo "ibase=2; obase=8; 101101" | bc           # convert binary to octal
   echo 1.2/4.5 | bc -l                           # floating point math
   z=$((x + y))                                   # sum integers in bash
.fi

.SH "SEE ALSO"
seq(1), tabgen(1NEMO), tabmath(1NEMO), nemoinp(3NEMO), getrange(3NEMO), functions(5NEMO)

.SH "AUTHOR"
Peter Teuben

.SH "UPDATE HISTORY"
.nf
.ta +1.0i +4.0i
18-apr-89	V1.0 created	PJT
20-jun-89	V1.0a small changed - doc updated	PJT
 5-jul-89	V1.1 added nmax parameter	PJT
18-may-92	documentation
16-jun-97	V1.6 %d forces integer math	PJT
28-aug-00	V1.7 documented tab= and seed=	PJT
31-may-01	V1.8 added atof=	PJT
4-mar-03	V1.9 added dms=  	PJT
.fi
