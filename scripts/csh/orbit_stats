#!/bin/bash
#
#  integrate orbits using different methods, and provide
#  some orbit statistics on conserving energy
#
#  Typical run & analysis:
#
#       for i in $(seq 100); do orbit_stats  eps=0.1 nbody=1000 kmax=7 mode=1 run=run1 seed=-2 >> stat1a.log; done
#       tabhist stat1a.log 5 0 400 scale=1e6
#
 
#set -x
export DEBUG=-1

#                 parameters for the script that can be overriden via the commandline
run=run1        # basename of the files belonging to this simulation
nbody=10000     # number of bodies in the first ring
tstop=10        # stop time of the integration
kmax=8          # integration step is 1/2**kmax
step=0.05       # timestep for output
eps=0.05        # softening
mode=1          # 1=gyrfalcoN 2=hackcode1 3=quadcode
qp=0            # qp mode for hackcode1?
tol=1.0         # treecode tolereance
seed=0


#             simple keyword=value command line parser for bash
for arg in $*; do
  export $arg
done

#             delete this old run
rm -f $run.*


mkplummer $run.in $nbody seed=$seed # scale=-1
if [ $mode = 1 ]; then
    gyrfalcON $run.in $run.out eps=$eps kmax=$kmax give=mxvpa step=$step tstop=$tstop > $run.log
    tabcomment $run.log - delete=t  | awk '{print $1,$2}' > $run.etot
elif [ $mode = 2 ]; then
    if [ $qp = 0 ]; then
	hackcode1    $run.in $run.out eps=$eps tol=$tol freq="2**$kmax" freqout=1/$step tstop=$tstop options=mass,phi,acc > $run.log
    else
	hackcode1_qp $run.in $run.out eps=$eps tol=$tol freq="2**$kmax" freqout=1/$step tstop=$tstop options=mass,phi,acc > $run.log
    fi
    snapdiagplot $run.out tab=$run.etot
elif [ $mode = 3 ]; then
    quadcode $run.in $run.out  eps_r=$eps eps_t=$eps freq="2**$kmax" freqout=1/$step tstop=$tstop options=mass,phi,acc > $run.log
    snapdiagplot $run.out tab=$run.etot
else
    exit 0
fi

stoo $run.out $run.orb stats=t > $run.stats

#    de0:   global energy conservation in 
if [ $mode = 1 ]; then
    # sigma
    de0=$(tabstat $run.etot 2 qac=t | txtpar - -%2/%1 p0=1,3 p1=1,4)
    # max
    #de0=$(tabstat run1.etot 2 qac=t | txtpar - 'max(%3/%5-1,1-%4/%5)' p0=1,3 p1=1,4 p2=1,5 p3=1,6 p4=1,3)

else
    #de0=$(txtpar $run.etot p0=Worst,1,9)
    de0=$(tabstat $run.etot 2 qac=t | txtpar - -%2/%1 p0=1,3 p1=1,4)    
fi

#     de0:   mean and sigma of 
de1=$(awk '{print -$2/$1}' $run.stats | tabstat - qac=t | txtpar - p0=1,3 p1=1,4)

echo $nbody $mode $kmax $eps $de0 $de1

