# -*- makefile -*-
#
# sets library sub-directory and flags for clang compiler
# to be included by makefile 
#
include ../utils/make.sh

EXT             := .clang
CXX             := clang++
CC              := clang
FC              := gfortran

PLATFORM 	:= $(shell uname -m)
#
# Detect GCC version
#
empty:=
space:= $(empty) $(empty)

# detect default c++ standard supported
CXX_STD_DEFAULT := $(shell $(CXX) -dM -E -x c++ /dev/null | grep __cplusplus | awk '{print $$3}')
stddefault:
	@echo "OSTYPE = " $(CXX_STD_DEFAULT)

# detect OSTYPE (Linux or Darwin) 
OSTYPE := $(shell uname)
ostype:
	@echo "OSTYPE = " $(OSTYPE)
# set following variable to 1 if gcc > 700
#API_GCC_7 := $(shell expr `echo $(GCCVERSION)` \>= 700)

STDAPI=-std=c++11#-std=c++17#-std=c++03

# warning flags
ifdef LIMITED_WARNINGS
WARNING		:= #$(LIMITED_WARNINGS) -Wshadow -Wno-format-security -Wno-unused-variable -Wno-unused-parameter -Wno-redeclared-class-member -Wno-c++11-compat-deprecated-writable-strings -Wno-shadow
else
WARNING		:= #-Wextra -Winit-self -Wshadow -Wno-format-security -Wno-unused-variable -Wno-unused-parameter -Wno-redeclared-class-member -Wno-c++11-compat-deprecated-writable-strings -Wno-shadow
endif
ifndef TBBROOT
ifdef WDutilsDevel
WARNING		+= -Wold-style-cast
endif
endif
#WARNING		+= -Wno-unknown-pragmas 
WARNING += -Wno-unused-command-line-argument -Wno-redeclared-class-member -Wno-deprecated-declarations -Wno-dangling-else -Wno-return-stack-address
# it seem that coverage (to be combined with gcov) does not work for openmp)
#ifdef WDutilsDevel
#PROFLAGS	:= --coverage -fprofile-use -Wcoverage-mismatch
#endif
# general optimisation and warning flags
ifeq ($(NO_ARCH_NATIVE),1)
   ARCH_NATIVE =
else
   ARCH_NATIVE = -march=native
endif

ifneq ($(OSTYPE),Darwin)
OPTFLAGS	+= -rdynamic $(ARCH_NATIVE)
endif

OPTFLAGS	+= \
		$(WARNING) -O2 -fPIC \
		-funroll-loops -fforce-addr $(PROFLAGS) $(RDYNAMIC)

# these are actually to be set
CFLAGS		:= $(OPTFLAGS)

WARNING		+= -Woverloaded-virtual
OPTFLAGS	+= -Woverloaded-virtual

ifdef CXX11
CXXFLAGS	:= -std=c++11 $(OPTFLAGS)
else
CXXFLAGS	:= $(STDAPI) $(OPTFLAGS)
endif

ifdef OPENMP
CXXFLAGS	+= -fopenmp
CFLAGS		+= -fopenmp
LDFLAGS		:= -shared -fopenmp $(PROFLAGS)
else
LDFLAGS		:= -shared $(PROFLAGS)
endif

# end

