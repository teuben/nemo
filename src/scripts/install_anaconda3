#! /bin/csh -f
#
#  Install an anaconda3 (or miniconda3) python. A full install takes about 2 mins,
#  assuming you have the .sh file
#
#  An alternative is to set up a special conda environment for NEMO, e.g.
#
#     conda create -n nemo1 python=x.x -y
#     source activate nemo1
#     conda install -n nemo1 [package]
#     source deactivate
#     conda remove -n nemo1 -all
#
#  but this has not been experimented with.
#
#  May-2020        os=Linux/MacOSX

set url   = https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
set url   = https://repo.anaconda.com/archive/Anaconda3-2020.07-MacOSX-x86_64.sh
set url   = https://repo.anaconda.com/archive/Anaconda3-2020.07-Linux-x86_64.sh
set url   = https://repo.anaconda.com/archive/Anaconda3-2020.07-%s-x86_64.sh
set url   = https://repo.anaconda.com/archive/Anaconda3-2020.11-%s-x86_64.sh
set url   = https://repo.anaconda.com/archive/Anaconda3-2021.05-%s-x86_64.sh

set dir   = `pwd`/anaconda3
set opt   = 1
set wget  = wgetc
set os    = `uname -s`

set amuse = 0

# you better know what you are doing here
foreach arg ($*)
  set $arg
end

if ($os == Darwin) set os = MacOSX

set mc3 = `printf $url $os`
set msh = $mc3:t

$wget $mc3
bash $msh -b -p $dir

setenv PATH "$dir/bin:$PATH"

conda update -y conda
pip install --upgrade pip

# write the source-able shell startup files

echo "set path = ($dir/bin "'$path); rehash'  >> python_start.csh
echo "export PATH=${dir}/bin:"'$PATH'         >> python_start.sh

echo Created python_start files for you

if ($opt == 0) exit 0



# http://projets.lam.fr/projects/unsio/
# install a default via pip
# pip install unsio uns_projects
pip install python-unsio python-unsiotools

# but then install the developers version if these directories exist
if ($?NEMO) then
  foreach dir ($NEMO/usr/jsl/unsio $NEMO/usr/jsl/uns_projects)
    if (-d $dir) then
      echo Installing with pip install $dir
      (cd $dir ; pip install -e .)
    else
      echo Skipping pip install -e $dir
    endif
  end
else
  echo Warning:  no NEMO, skipping those components
endif

# https://github.com/adrn/gala
# conda install gala --channel conda-forge
pip install gala

# https://github.com/jobovy/galpy
#
pip install galpy

# https://github.com/GalacticDynamics-Oxford/Agama
#
pip install agama



# https://github.com/pynbody/pynbody
#
pip install pynbody

# https://github.com/kyleaoman/martini
#
pip install astromartini

# https://github.com/yt-project/yt
#
pip install yt

# http://galpak3d.univ-lyon1.fr/
# optional: PyFFTW,  MPDAF, EMCEE , PyMultinest
pip install galpak

# https://amusecode.github.io/getting-started
#
pip install amuse-framework
# and a few simple starter packages
pip install amuse-galactics amuse-gadget2 amuse-bhtree

# Installing AMUSE takes a LONG LONG time, so by default this is not installed at first
# It also needs a lot more packages (see below)
#   pip install numpy nose docutils mpi4py h5py
#   pip install scipy astropy jupyter pandas seaborn
if ($amuse) then
  pip install amuse
endif  


# ubuntu packages for amuse:
#  build-essential gfortran python-dev \
#  libopenmpi-dev openmpi-bin \
#  libgsl-dev cmake libfftw3-3 libfftw3-dev \
#  libgmp3-dev libmpfr6 libmpfr-dev \
#  libhdf5-serial-dev hdf5-tools \
#  git

echo Reminder: also created python_start files for you
