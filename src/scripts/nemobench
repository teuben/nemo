#! /bin/bash
#
#   typically called via a Benchfile as in:
#          nemobench label mkplummer . 10000
#set -x


_version="22-may-2025"
if [ $# -eq 0 ]; then
    echo "Usage $0 label cmd [args]"
    echo "Version $_version"
    echo "Simplified user/system/elapses/percentage /usr/bin/time output for benchmarks"
    exit 0
fi

log=/tmp/nemobench$$.log                 # per process
log=/tmp/nemobench.log                   # global
log=$XDG_RUNTIME_DIR/nemobench.log       # per session (does not work on a mac)
log=$NEMO/tmp/nemobench.log              # per NEMO

label=$1
shift

if ! command -v $1 >/dev/null 2>&1; then
    echo "NEMOBENCH: FAIL to find $1"
    exit 1
fi
echo NEMOBENCH: $* >> $log

if [ $(uname -s) == "Darwin" ]; then
    linux=0
else
    linux=1
fi
#linux=2
#linux=0

if [ $linux = 1 ]; then
    /usr/bin/time --format="%U %S %e %P" $* >> $log 2>&1
elif [ $linux = 2 ]; then
    # Linux emulating a mac (which has hardcoded real/usr/sys)
    /usr/bin/time --format="%e real %U user %S sys" $* >> $log 2>&1
else
    /usr/bin/time $* >> $log 2>&1
fi
#echo CHRT
#sudo chrt -f 99 /usr/bin/time $* >> $log 2>&1
echo -n "NEMOBENCH: $label $1 "
if [ $linux = 1 ]; then
    #    0.00user 0.00system 0:00.00elapsed 100%CPU (0avgtext+0avgdata 2628maxresident)k
    #tail -2 $log |grep elapsed
    #
    #tail -1 $log | txtpar - "%1,%2,%3,(%1+%2)/%3*100" p0=1,1 p1=1,2 p2=1,3
    #    0.00 0.00 0.00 100%
    tail -1 $log 
else
    tail -1 $log |grep -w real | grep -w user | grep -w sys | txtpar - "%1,%2,%3,(%1+%2)/%3*100" p0=1,3 p1=1,5 p2=1,1
fi
