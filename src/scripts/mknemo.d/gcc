#! /usr/bin/env bash
#
# sudo apt install build-essential
# sudo apt install libmpfr-dev libgmp3-dev libmpc-dev -y

# --enable-checking=release (esp. useful for compile-time tests
#      as it disables some consistency checks in the compile),
# --disable-bootstrap (builds faster, but disables some consistency checks).
#
#  ~2h   dart76 just l=c and j=1
#  32m   jansky l=c,c++,fortran and j=4
#
# An example install could be
#    mknemo gcc
#    source $NEMO/opt/gcc-15.1.0/gcc_start.sh
#    mkcd $NEMO/redo
#    ../docs/install_nemo.sh v=-15.1.0 nemo=nemo15
#    source nemo15/nemo_start.sh
#

V=10.5.0               # July 2023
v=11.5.0
v=12.4.0
v=13.3.0
v=14.2.0               # version (mid 2024)
v=15.1.0               # april 2025
a=x86_64-linux-gnu     # architecture
b=64                   # lib name
j=4                    # number of processors for make
l=c,c++,fortran        # languages to compile

for arg in $*; do
  export $arg
done

cd $NEMO/local

root=$NEMO/opt/gcc-${v}
lib=lib$b
tgz=gcc-${v}.tar.gz
if [ ! -e $tgz ]; then
   wget http://ftp.gnu.org/gnu/gcc/gcc-${v}/$tgz
fi

tar -xf $tgz
cd gcc-${v}
./configure -v \
            --build=${a} \
            --host=${a} \
            --target=${a} \
            --prefix=$NEMO/opt/gcc-${v} \
            --enable-checking=release \
            --enable-languages=$l \
            --disable-multilib \
            --program-suffix=-${v}
make clean
make -j $j
make install



rc=$NEMO/opt/gcc-${v}/gcc_start.sh

echo "_r=$root"                                            > $rc
echo "lib=$lib"                                           >> $rc
echo 'export PATH=$_r/bin:$PATH'                          >> $rc
echo 'export LD_LIBRARY_PATH=$_r/$lib:$LD_LIBRARY_PATH'   >> $rc
    
echo "Wrote $rc"

echo gcc '"'$v'"' `date` >> $NEMO/opt/mknemo.log
