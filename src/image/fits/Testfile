DIR = src/image/fits
BIN = ccdfits fitsccd scanfits fitsglue fitshead tabfits
NEED = $(BIN) ccdmath ccdstat

DATA = ccd.in ccd.out fits.in map001.fits map002.fits map003.fits cube.fits \
	map004.fits  map004.ccd map004a.ccd  tab.in tab.fits

help:
	@echo $(DIR)

need:
	@echo $(NEED)

clean:
	@echo Cleaning $(DIR)
	@rm -f $(DATA)

FIE = 10*%x+sqrt(%y)

#all:	$(BIN) bitpix64
all:	$(BIN) 

ccd.in:
	@echo Creating $@
#	ccdmath out=ccd.in "fie=10*%x+sqrt(%y)"  size=10,10,1
	$(EXEC) ccdmath out=ccd.in "fie=$(FIE)"  size=10,10,1
	@bsf ccd.in '41.644 31.2134 0 93 115'

map001.fits:
	$(EXEC) ccdmath "" - "rang(0,1)" size=10,10,1 seed=1 | $(EXEC) ccdfits - map001.fits ; nemo.coverage ccdfits.c

map002.fits:
	$(EXEC) ccdmath "" - "rang(0,1)" size=10,10,1 seed=2 | $(EXEC) ccdfits - map002.fits; nemo.coverage ccdfits.c

map003.fits:
	$(EXEC) ccdmath "" - "rang(0,1)" size=10,10,1 seed=3 | $(EXEC) ccdfits - map003.fits; nemo.coverage ccdfits.c
	

bitpix64:
	$(EXEC) ccdmath "" map004.ccd "%x+%y" size=10,10,1 
	$(EXEC) ccdfits map004.ccd map004.fits bitpix=64 ; nemo.coverage ccdfits.c
	$(EXEC) fitsccd map004.fits map004a.ccd; nemo.coverage fitsccd.c
	$(EXEC) ccdmath map004a.ccd,map004.ccd - %1-%2 | ccdstat -
	@bsf map004.ccd
	

ccdfits: ccd.in
	@echo Running $@
	$(EXEC) ccdfits ccd.in fits.in; nemo.coverage ccdfits.c

fitsccd: ccdfits
	@echo Running $@
	$(EXEC) fitsccd fits.in ccd.out; nemo.coverage fitsccd.c
	@echo Testing ccd-fits-ccd with "FIE=$(FIE)"
	$(EXEC) ccdmath ccd.in,ccd.out - %1-%2 | ccdstat -
	@bsf ccd.out '41.6266 31.2366 -1 93 115'

scanfits: ccdfits
	@echo Running $@
	$(EXEC) scanfits fits.in;
	$(EXEC) scanfits fits.in	; nemo.coverage scanfits.c


fitsglue: map001.fits map002.fits map003.fits
	@echo Running $@
	$(EXEC) fitsglue map%03d.fits cube.fits inlist=1:3;
	$(EXEC) fitsglue map%03d.fits cube.fits inlist=1:3 ; nemo.coverage fitsglue.c
	$(EXEC) fitshead map001.fits | grep DATA; nemo.coverage fitshead.c
	$(EXEC) fitshead map002.fits | grep DATA
	$(EXEC) fitshead map003.fits | grep DATA
	$(EXEC) fitshead cube.fits | grep DATA ; nemo.coverage fitshead.c
	

fitshead: map003.fits
	@echo Running $@
	$(EXEC) fitshead map003.fits; nemo.coverage fitshead.c

tab.in:
	@nemoinp 1:100 > tab.in

tabfits:	tab.in
	$(EXEC) tabfits tab.in tab.fits nx=10 ny=10 nz=1; nemo.coverage tabfits.c
	$(EXEC) fitshead tab.fits | grep DATA
